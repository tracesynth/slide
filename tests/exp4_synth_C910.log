1
pass check_ppo [R];po;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [R];po;[R]
2
pass check_ppo [R];po;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [R];po;[W]
4
pass check_ppo [R];po;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
5
pass check_ppo [R];po;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [R];po;[AMO]
6
pass check_ppo [R];po;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
7
pass check_ppo [R];po;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [R];po;[AQ]
8
pass check_ppo [R];po;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[30]
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
these ppo strict contain ppo  [R];po;[AQRL] contain_list is  [[R];po;[RL]]
PPOFlag.Strengthen PPOFlag.Strengthen
9
pass check_ppo [R];addr;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
10
pass check_ppo [R];addr;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
12
pass check_ppo [R];addr;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[34, 49]
[R];addr;[R]
[785] 34
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [R];addr;[XLr] contain_list is  [[R];addr;[R], [R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
13
pass check_ppo [R];addr;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[33, 34]
[R];addr;[W]
[784] 33
[R];addr;[R]
[785] 34
these ppo strict contain ppo  [R];addr;[AMO] contain_list is  [[R];addr;[W], [R];addr;[R]]
PPOFlag.Strengthen PPOFlag.Strengthen
14
pass check_ppo [R];addr;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[30, 33, 34]
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[R];addr;[W]
[784] 33
[R];addr;[R]
[785] 34
these ppo strict contain ppo  [R];addr;[RL] contain_list is  [[R];po;[RL], [R];addr;[W], [R];addr;[R]]
PPOFlag.Strengthen PPOFlag.Strengthen
15
pass check_ppo [R];addr;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[33, 34]
[R];addr;[W]
[784] 33
[R];addr;[R]
[785] 34
these ppo strict contain ppo  [R];addr;[AQ] contain_list is  [[R];addr;[W], [R];addr;[R]]
PPOFlag.Strengthen PPOFlag.Strengthen
16
pass check_ppo [R];addr;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[30, 33, 34]
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[R];addr;[W]
[784] 33
[R];addr;[R]
[785] 34
these ppo strict contain ppo  [R];addr;[AQRL] contain_list is  [[R];po;[RL], [R];addr;[W], [R];addr;[R]]
PPOFlag.Strengthen PPOFlag.Strengthen
17
18
pass check_ppo [R];data;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
20
21
22
23
24
25
pass check_ppo [R];ctrl;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [R];ctrl;[R]
26
pass check_ppo [R];ctrl;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
28
pass check_ppo [R];ctrl;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[49]
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [R];ctrl;[XLr] contain_list is  [[R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
29
pass check_ppo [R];ctrl;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[36]
[R];ctrl;[W]
[819, 822, 823, 826, 828, 829, 830, 832, 833, 834, 839, 840, 841] 36
these ppo strict contain ppo  [R];ctrl;[AMO] contain_list is  [[R];ctrl;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
30
pass check_ppo [R];ctrl;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[30, 36]
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[R];ctrl;[W]
[819, 822, 823, 826, 828, 829, 830, 832, 833, 834, 839, 840, 841] 36
these ppo strict contain ppo  [R];ctrl;[RL] contain_list is  [[R];po;[RL], [R];ctrl;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
31
pass check_ppo [R];ctrl;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[36]
[R];ctrl;[W]
[819, 822, 823, 826, 828, 829, 830, 832, 833, 834, 839, 840, 841] 36
these ppo strict contain ppo  [R];ctrl;[AQ] contain_list is  [[R];ctrl;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
32
pass check_ppo [R];ctrl;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[30, 36]
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[R];ctrl;[W]
[819, 822, 823, 826, 828, 829, 830, 832, 833, 834, 839, 840, 841] 36
these ppo strict contain ppo  [R];ctrl;[AQRL] contain_list is  [[R];po;[RL], [R];ctrl;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
33
pass check_ppo [R];rsw;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
34
36
37
38
39
40
41
pass check_ppo [R];fencerel(Fence.rw.rw);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
42
pass check_ppo [R];fencerel(Fence.rw.rw);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
49
pass check_ppo [R];fencerel(Fence.w.rw);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [R];fencerel(Fence.w.rw);[R]
50
pass check_ppo [R];fencerel(Fence.w.rw);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [R];fencerel(Fence.w.rw);[W]
57
pass check_ppo [R];fencerel(Fence.r.rw);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
58
pass check_ppo [R];fencerel(Fence.r.rw);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
65
pass check_ppo [R];fencerel(Fence.rw.r);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
66
pass check_ppo [R];fencerel(Fence.rw.r);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [R];fencerel(Fence.rw.r);[W]
73
pass check_ppo [R];fencerel(Fence.rw.w);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
74
pass check_ppo [R];fencerel(Fence.rw.w);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
81
pass check_ppo [R];fencerel(Fence.w.w);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [R];fencerel(Fence.w.w);[R]
82
pass check_ppo [R];fencerel(Fence.w.w);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
89
pass check_ppo [R];fencerel(Fence.r.r);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
90
pass check_ppo [R];fencerel(Fence.r.r);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [R];fencerel(Fence.r.r);[W]
97
pass check_ppo [R];fencerel(Fence.r.w);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [R];fencerel(Fence.r.w);[R]
98
pass check_ppo [R];fencerel(Fence.r.w);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
105
pass check_ppo [R];fencerel(Fence.w.r);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
106
pass check_ppo [R];fencerel(Fence.w.r);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [R];fencerel(Fence.w.r);[W]
113
pass check_ppo [R];fencerel(Fence.tso);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
114
pass check_ppo [R];fencerel(Fence.tso);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
121
122
124
125
126
127
128
129
130
pass check_ppo [R];fri;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0]
[R];po-loc;[W]
[32, 54, 100, 156] 0
these ppo strict contain ppo  [R];fri;[W] contain_list is  [[R];po-loc;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
132
133
134
135
136
137
138
140
141
142
143
144
145
pass check_ppo [R];po-loc;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
146
pass check_ppo [R];po-loc;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
148
pass check_ppo [R];po-loc;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 49]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [R];po-loc;[XLr] contain_list is  [[R];po-loc;[R], [R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
149
pass check_ppo [R];po-loc;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 2]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
these ppo strict contain ppo  [R];po-loc;[AMO] contain_list is  [[R];po-loc;[W], [R];po-loc;[R]]
PPOFlag.Strengthen PPOFlag.Strengthen
150
pass check_ppo [R];po-loc;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 2, 30]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
these ppo strict contain ppo  [R];po-loc;[RL] contain_list is  [[R];po-loc;[W], [R];po-loc;[R], [R];po;[RL]]
PPOFlag.Strengthen PPOFlag.Strengthen
151
pass check_ppo [R];po-loc;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 2]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
these ppo strict contain ppo  [R];po-loc;[AQ] contain_list is  [[R];po-loc;[W], [R];po-loc;[R]]
PPOFlag.Strengthen PPOFlag.Strengthen
152
pass check_ppo [R];po-loc;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 2, 30]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
these ppo strict contain ppo  [R];po-loc;[AQRL] contain_list is  [[R];po-loc;[W], [R];po-loc;[R], [R];po;[RL]]
PPOFlag.Strengthen PPOFlag.Strengthen
153
154
156
157
158
159
160
161
pass check_ppo [W];po;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];po;[R]
162
pass check_ppo [W];po;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];po;[W]
164
pass check_ppo [W];po;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];po;[XLr]
165
pass check_ppo [W];po;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];po;[AMO]
166
pass check_ppo [W];po;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
167
pass check_ppo [W];po;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
168
pass check_ppo [W];po;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[29, 52]
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
these ppo strict contain ppo  [W];po;[AQRL] contain_list is  [[W];po;[RL], [W];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
169
170
172
173
174
175
176
177
178
180
181
182
183
184
185
186
188
189
190
191
192
193
194
196
197
198
199
200
201
pass check_ppo [W];fencerel(Fence.rw.rw);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
202
pass check_ppo [W];fencerel(Fence.rw.rw);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
209
pass check_ppo [W];fencerel(Fence.w.rw);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
210
pass check_ppo [W];fencerel(Fence.w.rw);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
217
pass check_ppo [W];fencerel(Fence.r.rw);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
218
pass check_ppo [W];fencerel(Fence.r.rw);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
225
pass check_ppo [W];fencerel(Fence.rw.r);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
226
pass check_ppo [W];fencerel(Fence.rw.r);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];fencerel(Fence.rw.r);[W]
233
pass check_ppo [W];fencerel(Fence.rw.w);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
234
pass check_ppo [W];fencerel(Fence.rw.w);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
241
pass check_ppo [W];fencerel(Fence.w.w);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];fencerel(Fence.w.w);[R]
242
pass check_ppo [W];fencerel(Fence.w.w);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
249
pass check_ppo [W];fencerel(Fence.r.r);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
250
pass check_ppo [W];fencerel(Fence.r.r);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];fencerel(Fence.r.r);[W]
257
pass check_ppo [W];fencerel(Fence.r.w);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];fencerel(Fence.r.w);[R]
258
pass check_ppo [W];fencerel(Fence.r.w);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];fencerel(Fence.r.w);[W]
265
pass check_ppo [W];fencerel(Fence.w.r);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
266
pass check_ppo [W];fencerel(Fence.w.r);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];fencerel(Fence.w.r);[W]
273
pass check_ppo [W];fencerel(Fence.tso);[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
274
pass check_ppo [W];fencerel(Fence.tso);[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
281
282
pass check_ppo [W];coi;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[1]
[W];po-loc;[W]
[77, 131, 156] 1
these ppo strict contain ppo  [W];coi;[W] contain_list is  [[W];po-loc;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
284
285
286
287
288
289
290
292
293
294
295
296
297
pass check_ppo [W];rfi;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];rfi;[R]
298
300
pass check_ppo [W];rfi;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];rfi;[XLr]
301
pass check_ppo [W];rfi;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[1]
[W];po-loc;[W]
[77, 131, 156] 1
these ppo strict contain ppo  [W];rfi;[AMO] contain_list is  [[W];po-loc;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
302
pass check_ppo [W];rfi;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[1, 29]
[W];po-loc;[W]
[77, 131, 156] 1
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
these ppo strict contain ppo  [W];rfi;[RL] contain_list is  [[W];po-loc;[W], [W];po;[RL]]
PPOFlag.Strengthen PPOFlag.Strengthen
303
pass check_ppo [W];rfi;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[1, 52]
[W];po-loc;[W]
[77, 131, 156] 1
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
these ppo strict contain ppo  [W];rfi;[AQ] contain_list is  [[W];po-loc;[W], [W];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
304
pass check_ppo [W];rfi;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[1, 29, 52]
[W];po-loc;[W]
[77, 131, 156] 1
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
these ppo strict contain ppo  [W];rfi;[AQRL] contain_list is  [[W];po-loc;[W], [W];po;[RL], [W];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
305
pass check_ppo [W];po-loc;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];po-loc;[R]
306
pass check_ppo [W];po-loc;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
308
pass check_ppo [W];po-loc;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [W];po-loc;[XLr]
309
pass check_ppo [W];po-loc;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[1]
[W];po-loc;[W]
[77, 131, 156] 1
these ppo strict contain ppo  [W];po-loc;[AMO] contain_list is  [[W];po-loc;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
310
pass check_ppo [W];po-loc;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[1, 29]
[W];po-loc;[W]
[77, 131, 156] 1
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
these ppo strict contain ppo  [W];po-loc;[RL] contain_list is  [[W];po-loc;[W], [W];po;[RL]]
PPOFlag.Strengthen PPOFlag.Strengthen
311
pass check_ppo [W];po-loc;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[1, 52]
[W];po-loc;[W]
[77, 131, 156] 1
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
these ppo strict contain ppo  [W];po-loc;[AQ] contain_list is  [[W];po-loc;[W], [W];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
312
pass check_ppo [W];po-loc;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[1, 29, 52]
[W];po-loc;[W]
[77, 131, 156] 1
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
these ppo strict contain ppo  [W];po-loc;[AQRL] contain_list is  [[W];po-loc;[W], [W];po;[RL], [W];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
313
314
316
317
318
319
320
481
pass check_ppo [XLr];po;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [XLr];po;[R]
482
pass check_ppo [XLr];po;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
483
not suitable ppo for [XLr];po;[XSc]
484
pass check_ppo [XLr];po;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[49]
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [XLr];po;[XLr] contain_list is  [[R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
485
pass check_ppo [XLr];po;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[50]
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];po;[AMO] contain_list is  [[XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
486
pass check_ppo [XLr];po;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[30, 50]
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];po;[RL] contain_list is  [[R];po;[RL], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
487
pass check_ppo [XLr];po;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[50]
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];po;[AQ] contain_list is  [[XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
488
pass check_ppo [XLr];po;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[30, 50]
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];po;[AQRL] contain_list is  [[R];po;[RL], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
489
pass check_ppo [XLr];addr;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[34]
[R];addr;[R]
[785] 34
these ppo strict contain ppo  [XLr];addr;[R] contain_list is  [[R];addr;[R]]
PPOFlag.Strengthen PPOFlag.Strengthen
490
pass check_ppo [XLr];addr;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[33, 50]
[R];addr;[W]
[784] 33
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];addr;[W] contain_list is  [[R];addr;[W], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
491
not suitable ppo for [XLr];addr;[XSc]
492
pass check_ppo [XLr];addr;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[34, 49]
[R];addr;[R]
[785] 34
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [XLr];addr;[XLr] contain_list is  [[R];addr;[R], [R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
493
pass check_ppo [XLr];addr;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[33, 34, 50]
[R];addr;[W]
[784] 33
[R];addr;[R]
[785] 34
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];addr;[AMO] contain_list is  [[R];addr;[W], [R];addr;[R], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
494
pass check_ppo [XLr];addr;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[30, 33, 34, 50]
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[R];addr;[W]
[784] 33
[R];addr;[R]
[785] 34
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];addr;[RL] contain_list is  [[R];po;[RL], [R];addr;[W], [R];addr;[R], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
495
pass check_ppo [XLr];addr;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[33, 34, 50]
[R];addr;[W]
[784] 33
[R];addr;[R]
[785] 34
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];addr;[AQ] contain_list is  [[R];addr;[W], [R];addr;[R], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
496
pass check_ppo [XLr];addr;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[30, 33, 34, 50]
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[R];addr;[W]
[784] 33
[R];addr;[R]
[785] 34
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];addr;[AQRL] contain_list is  [[R];po;[RL], [R];addr;[W], [R];addr;[R], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
497
498
pass check_ppo [XLr];data;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[35, 50]
[R];data;[W]
[] 35
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];data;[W] contain_list is  [[R];data;[W], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
499
not suitable ppo for [XLr];data;[XSc]
500
501
502
503
504
505
pass check_ppo [XLr];ctrl;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [XLr];ctrl;[R]
506
pass check_ppo [XLr];ctrl;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[36, 50]
[R];ctrl;[W]
[819, 822, 823, 826, 828, 829, 830, 832, 833, 834, 839, 840, 841] 36
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];ctrl;[W] contain_list is  [[R];ctrl;[W], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
507
not suitable ppo for [XLr];ctrl;[XSc]
508
pass check_ppo [XLr];ctrl;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[49]
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [XLr];ctrl;[XLr] contain_list is  [[R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
509
pass check_ppo [XLr];ctrl;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[36, 50]
[R];ctrl;[W]
[819, 822, 823, 826, 828, 829, 830, 832, 833, 834, 839, 840, 841] 36
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];ctrl;[AMO] contain_list is  [[R];ctrl;[W], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
510
pass check_ppo [XLr];ctrl;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[30, 36, 50]
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[R];ctrl;[W]
[819, 822, 823, 826, 828, 829, 830, 832, 833, 834, 839, 840, 841] 36
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];ctrl;[RL] contain_list is  [[R];po;[RL], [R];ctrl;[W], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
511
pass check_ppo [XLr];ctrl;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[36, 50]
[R];ctrl;[W]
[819, 822, 823, 826, 828, 829, 830, 832, 833, 834, 839, 840, 841] 36
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];ctrl;[AQ] contain_list is  [[R];ctrl;[W], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
512
pass check_ppo [XLr];ctrl;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[30, 36, 50]
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[R];ctrl;[W]
[819, 822, 823, 826, 828, 829, 830, 832, 833, 834, 839, 840, 841] 36
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];ctrl;[AQRL] contain_list is  [[R];po;[RL], [R];ctrl;[W], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
513
514
515
516
517
518
519
520
601
602
603
604
605
606
607
608
609
610
pass check_ppo [XLr];fri;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 50]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];fri;[W] contain_list is  [[R];po-loc;[W], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
611
not suitable ppo for [XLr];fri;[XSc]
612
613
614
615
616
617
618
619
620
621
622
623
624
625
pass check_ppo [XLr];po-loc;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
these ppo strict contain ppo  [XLr];po-loc;[R] contain_list is  [[R];po-loc;[R]]
PPOFlag.Strengthen PPOFlag.Strengthen
626
pass check_ppo [XLr];po-loc;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 50]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];po-loc;[W] contain_list is  [[R];po-loc;[W], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
627
not suitable ppo for [XLr];po-loc;[XSc]
628
pass check_ppo [XLr];po-loc;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 49]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [XLr];po-loc;[XLr] contain_list is  [[R];po-loc;[R], [R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
629
pass check_ppo [XLr];po-loc;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 2, 50]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];po-loc;[AMO] contain_list is  [[R];po-loc;[W], [R];po-loc;[R], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
630
pass check_ppo [XLr];po-loc;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 2, 30, 50]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];po-loc;[RL] contain_list is  [[R];po-loc;[W], [R];po-loc;[R], [R];po;[RL], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
631
pass check_ppo [XLr];po-loc;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 2, 50]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];po-loc;[AQ] contain_list is  [[R];po-loc;[W], [R];po-loc;[R], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
632
pass check_ppo [XLr];po-loc;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 2, 30, 50]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[XLr];po;[W]
[32, 1136, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1157, 1158] 50
these ppo strict contain ppo  [XLr];po-loc;[AQRL] contain_list is  [[R];po-loc;[W], [R];po-loc;[R], [R];po;[RL], [XLr];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
633
634
635
pass check_ppo [XLr];rmw;[XSc]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
636
637
638
639
640
641
pass check_ppo [AMO];po;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [AMO];po;[R]
642
pass check_ppo [AMO];po;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [AMO];po;[W]
644
pass check_ppo [AMO];po;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[49]
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [AMO];po;[XLr] contain_list is  [[R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
645
pass check_ppo [AMO];po;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
646
pass check_ppo [AMO];po;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[29, 30, 53]
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AMO];po;[RL] contain_list is  [[W];po;[RL], [R];po;[RL], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
647
pass check_ppo [AMO];po;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[52, 53]
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AMO];po;[AQ] contain_list is  [[W];po;[AQ], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
648
pass check_ppo [AMO];po;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[29, 30, 52, 53]
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AMO];po;[AQRL] contain_list is  [[W];po;[RL], [R];po;[RL], [W];po;[AQ], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
649
650
652
653
654
655
656
657
658
660
661
662
663
664
665
666
668
669
670
671
672
673
674
676
677
678
679
680
761
762
pass check_ppo [AMO];coi;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
these ppo strict contain ppo  [AMO];coi;[W] contain_list is  [[R];po-loc;[W], [W];po-loc;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
764
765
766
767
768
769
770
772
773
774
775
776
777
pass check_ppo [AMO];rfi;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
778
780
pass check_ppo [AMO];rfi;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5, 7, 49]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [AMO];rfi;[XLr] contain_list is  [[AMO];rfi;[R], [R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
781
pass check_ppo [AMO];rfi;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AMO];rfi;[AMO] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
782
pass check_ppo [AMO];rfi;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 29, 30, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AMO];rfi;[RL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [W];po;[RL], [R];po;[RL], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
783
pass check_ppo [AMO];rfi;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AMO];rfi;[AQ] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [W];po;[AQ], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
784
pass check_ppo [AMO];rfi;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 29, 30, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AMO];rfi;[AQRL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [W];po;[RL], [R];po;[RL], [W];po;[AQ], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
785
pass check_ppo [AMO];po-loc;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
786
pass check_ppo [AMO];po-loc;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
these ppo strict contain ppo  [AMO];po-loc;[W] contain_list is  [[R];po-loc;[W], [W];po-loc;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
788
pass check_ppo [AMO];po-loc;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5, 49]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [AMO];po-loc;[XLr] contain_list is  [[AMO];po-loc;[R], [R];po;[XLr]]
PPOFlag.Relaxed PPOFlag.Strengthen
789
pass check_ppo [AMO];po-loc;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AMO];po-loc;[AMO] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
790
pass check_ppo [AMO];po-loc;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 29, 30, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AMO];po-loc;[RL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [W];po;[RL], [R];po;[RL], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
791
pass check_ppo [AMO];po-loc;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AMO];po-loc;[AQ] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [W];po;[AQ], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
792
pass check_ppo [AMO];po-loc;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 29, 30, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AMO];po-loc;[AQRL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [W];po;[RL], [R];po;[RL], [W];po;[AQ], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
793
794
796
797
798
799
800
801
pass check_ppo [RL];po;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[]
add this ppo [RL];po;[R]
802
pass check_ppo [RL];po;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
804
pass check_ppo [RL];po;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[49]
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [RL];po;[XLr] contain_list is  [[R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
805
pass check_ppo [RL];po;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[51, 53]
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [RL];po;[AMO] contain_list is  [[RL];po;[W], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
806
pass check_ppo [RL];po;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[29, 30, 51, 53]
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [RL];po;[RL] contain_list is  [[W];po;[RL], [R];po;[RL], [RL];po;[W], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
807
pass check_ppo [RL];po;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
808
pass check_ppo [RL];po;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[29, 30, 31, 51, 52, 53]
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[RL];po;[AQ]
[740, 1171, 1178] 31
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [RL];po;[AQRL] contain_list is  [[W];po;[RL], [R];po;[RL], [RL];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
809
810
812
813
814
815
816
817
818
820
821
822
823
824
825
826
828
829
830
831
832
833
834
836
837
838
839
840
921
922
pass check_ppo [RL];coi;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 51]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
these ppo strict contain ppo  [RL];coi;[W] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [RL];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
924
925
926
927
928
929
930
932
933
934
935
936
937
pass check_ppo [RL];rfi;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5, 7]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
these ppo strict contain ppo  [RL];rfi;[R] contain_list is  [[AMO];rfi;[R]]
PPOFlag.Strengthen PPOFlag.Strengthen
938
940
pass check_ppo [RL];rfi;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5, 7, 49]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [RL];rfi;[XLr] contain_list is  [[AMO];rfi;[R], [R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
941
pass check_ppo [RL];rfi;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 51, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [RL];rfi;[AMO] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [RL];po;[W], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
942
pass check_ppo [RL];rfi;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 29, 30, 51, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [RL];rfi;[RL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [W];po;[RL], [R];po;[RL], [RL];po;[W], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
943
pass check_ppo [RL];rfi;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 31, 51, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[RL];po;[AQ]
[740, 1171, 1178] 31
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [RL];rfi;[AQ] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [RL];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
944
pass check_ppo [RL];rfi;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 29, 30, 31, 51, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[RL];po;[AQ]
[740, 1171, 1178] 31
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [RL];rfi;[AQRL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [W];po;[RL], [R];po;[RL], [RL];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
945
pass check_ppo [RL];po-loc;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
these ppo strict contain ppo  [RL];po-loc;[R] contain_list is  [[AMO];po-loc;[R]]
PPOFlag.Relaxed PPOFlag.Strengthen
946
pass check_ppo [RL];po-loc;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 51]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
these ppo strict contain ppo  [RL];po-loc;[W] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [RL];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
948
pass check_ppo [RL];po-loc;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5, 49]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [RL];po-loc;[XLr] contain_list is  [[AMO];po-loc;[R], [R];po;[XLr]]
PPOFlag.Relaxed PPOFlag.Strengthen
949
pass check_ppo [RL];po-loc;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 51, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [RL];po-loc;[AMO] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [RL];po;[W], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
950
pass check_ppo [RL];po-loc;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 29, 30, 51, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [RL];po-loc;[RL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [W];po;[RL], [R];po;[RL], [RL];po;[W], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
951
pass check_ppo [RL];po-loc;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 31, 51, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[RL];po;[AQ]
[740, 1171, 1178] 31
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [RL];po-loc;[AQ] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [RL];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
952
pass check_ppo [RL];po-loc;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 29, 30, 31, 51, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[RL];po;[AQ]
[740, 1171, 1178] 31
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [RL];po-loc;[AQRL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [W];po;[RL], [R];po;[RL], [RL];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
953
954
956
957
958
959
960
961
pass check_ppo [AQ];po;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
962
pass check_ppo [AQ];po;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
964
pass check_ppo [AQ];po;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[28, 49]
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [AQ];po;[XLr] contain_list is  [[AQ];po;[R], [R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
965
pass check_ppo [AQ];po;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[27, 28, 53]
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQ];po;[AMO] contain_list is  [[AQ];po;[W], [AQ];po;[R], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
966
pass check_ppo [AQ];po;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[27, 28, 29, 30, 53]
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQ];po;[RL] contain_list is  [[AQ];po;[W], [AQ];po;[R], [W];po;[RL], [R];po;[RL], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
967
pass check_ppo [AQ];po;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[27, 28, 52, 53]
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQ];po;[AQ] contain_list is  [[AQ];po;[W], [AQ];po;[R], [W];po;[AQ], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
968
pass check_ppo [AQ];po;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[27, 28, 29, 30, 52, 53]
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQ];po;[AQRL] contain_list is  [[AQ];po;[W], [AQ];po;[R], [W];po;[RL], [R];po;[RL], [W];po;[AQ], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
969
970
972
973
974
975
976
977
978
980
981
982
983
984
985
986
988
989
990
991
992
993
994
996
997
998
999
1000
1081
1082
pass check_ppo [AQ];coi;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 27]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
these ppo strict contain ppo  [AQ];coi;[W] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AQ];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
1084
1085
1086
1087
1088
1089
1090
1092
1093
1094
1095
1096
1097
pass check_ppo [AQ];rfi;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5, 7, 28]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
these ppo strict contain ppo  [AQ];rfi;[R] contain_list is  [[AMO];rfi;[R], [AQ];po;[R]]
PPOFlag.Strengthen PPOFlag.Strengthen
1098
1100
pass check_ppo [AQ];rfi;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5, 7, 28, 49]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [AQ];rfi;[XLr] contain_list is  [[AMO];rfi;[R], [AQ];po;[R], [R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
1101
pass check_ppo [AQ];rfi;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 27, 28, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQ];rfi;[AMO] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [AQ];po;[W], [AQ];po;[R], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1102
pass check_ppo [AQ];rfi;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 27, 28, 29, 30, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQ];rfi;[RL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [AQ];po;[W], [AQ];po;[R], [W];po;[RL], [R];po;[RL], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1103
pass check_ppo [AQ];rfi;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 27, 28, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQ];rfi;[AQ] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [AQ];po;[W], [AQ];po;[R], [W];po;[AQ], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1104
pass check_ppo [AQ];rfi;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 27, 28, 29, 30, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQ];rfi;[AQRL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [AQ];po;[W], [AQ];po;[R], [W];po;[RL], [R];po;[RL], [W];po;[AQ], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1105
pass check_ppo [AQ];po-loc;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5, 28]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
these ppo strict contain ppo  [AQ];po-loc;[R] contain_list is  [[AMO];po-loc;[R], [AQ];po;[R]]
PPOFlag.Relaxed PPOFlag.Strengthen
1106
pass check_ppo [AQ];po-loc;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 27]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
these ppo strict contain ppo  [AQ];po-loc;[W] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AQ];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
1108
pass check_ppo [AQ];po-loc;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5, 28, 49]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [AQ];po-loc;[XLr] contain_list is  [[AMO];po-loc;[R], [AQ];po;[R], [R];po;[XLr]]
PPOFlag.Relaxed PPOFlag.Strengthen
1109
pass check_ppo [AQ];po-loc;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 27, 28, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQ];po-loc;[AMO] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [AQ];po;[W], [AQ];po;[R], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1110
pass check_ppo [AQ];po-loc;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 27, 28, 29, 30, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQ];po-loc;[RL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [AQ];po;[W], [AQ];po;[R], [W];po;[RL], [R];po;[RL], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1111
pass check_ppo [AQ];po-loc;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 27, 28, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQ];po-loc;[AQ] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [AQ];po;[W], [AQ];po;[R], [W];po;[AQ], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1112
pass check_ppo [AQ];po-loc;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 27, 28, 29, 30, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQ];po-loc;[AQRL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [AQ];po;[W], [AQ];po;[R], [W];po;[RL], [R];po;[RL], [W];po;[AQ], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1113
1114
1116
1117
1118
1119
1120
1121
pass check_ppo [AQRL];po;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[28]
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
these ppo strict contain ppo  [AQRL];po;[R] contain_list is  [[AQ];po;[R]]
PPOFlag.Strengthen PPOFlag.Strengthen
1122
pass check_ppo [AQRL];po;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[27, 51]
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
these ppo strict contain ppo  [AQRL];po;[W] contain_list is  [[AQ];po;[W], [RL];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
1124
pass check_ppo [AQRL];po;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[28, 49]
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [AQRL];po;[XLr] contain_list is  [[AQ];po;[R], [R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
1125
pass check_ppo [AQRL];po;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[27, 28, 51, 53]
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQRL];po;[AMO] contain_list is  [[AQ];po;[W], [AQ];po;[R], [RL];po;[W], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1126
pass check_ppo [AQRL];po;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[27, 28, 29, 30, 51, 53]
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQRL];po;[RL] contain_list is  [[AQ];po;[W], [AQ];po;[R], [W];po;[RL], [R];po;[RL], [RL];po;[W], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1127
pass check_ppo [AQRL];po;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[27, 28, 31, 51, 52, 53]
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[RL];po;[AQ]
[740, 1171, 1178] 31
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQRL];po;[AQ] contain_list is  [[AQ];po;[W], [AQ];po;[R], [RL];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
1128
pass check_ppo [AQRL];po;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[27, 28, 29, 30, 31, 51, 52, 53]
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[RL];po;[AQ]
[740, 1171, 1178] 31
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQRL];po;[AQRL] contain_list is  [[AQ];po;[W], [AQ];po;[R], [W];po;[RL], [R];po;[RL], [RL];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
1129
1130
1132
1133
1134
1135
1136
1137
1138
1140
1141
1142
1143
1144
1145
1146
1148
1149
1150
1151
1152
1153
1154
1156
1157
1158
1159
1160
1241
1242
pass check_ppo [AQRL];coi;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 27, 51]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
these ppo strict contain ppo  [AQRL];coi;[W] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AQ];po;[W], [RL];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
1244
1245
1246
1247
1248
1249
1250
1252
1253
1254
1255
1256
1257
pass check_ppo [AQRL];rfi;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5, 7, 28]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
these ppo strict contain ppo  [AQRL];rfi;[R] contain_list is  [[AMO];rfi;[R], [AQ];po;[R]]
PPOFlag.Strengthen PPOFlag.Strengthen
1258
1260
pass check_ppo [AQRL];rfi;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5, 7, 28, 49]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [AQRL];rfi;[XLr] contain_list is  [[AMO];rfi;[R], [AQ];po;[R], [R];po;[XLr]]
PPOFlag.Strengthen PPOFlag.Strengthen
1261
pass check_ppo [AQRL];rfi;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 27, 28, 51, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQRL];rfi;[AMO] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [AQ];po;[W], [AQ];po;[R], [RL];po;[W], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1262
pass check_ppo [AQRL];rfi;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 27, 28, 29, 30, 51, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQRL];rfi;[RL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [AQ];po;[W], [AQ];po;[R], [W];po;[RL], [R];po;[RL], [RL];po;[W], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1263
pass check_ppo [AQRL];rfi;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 27, 28, 31, 51, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[RL];po;[AQ]
[740, 1171, 1178] 31
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQRL];rfi;[AQ] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [AQ];po;[W], [AQ];po;[R], [RL];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
1264
pass check_ppo [AQRL];rfi;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 7, 27, 28, 29, 30, 31, 51, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AMO];rfi;[R]
[] 7
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[RL];po;[AQ]
[740, 1171, 1178] 31
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQRL];rfi;[AQRL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];rfi;[R], [AQ];po;[W], [AQ];po;[R], [W];po;[RL], [R];po;[RL], [RL];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
1265
pass check_ppo [AQRL];po-loc;[R]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5, 28]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
these ppo strict contain ppo  [AQRL];po-loc;[R] contain_list is  [[AMO];po-loc;[R], [AQ];po;[R]]
PPOFlag.Relaxed PPOFlag.Strengthen
1266
pass check_ppo [AQRL];po-loc;[W]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 27, 51]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
these ppo strict contain ppo  [AQRL];po-loc;[W] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AQ];po;[W], [RL];po;[W]]
PPOFlag.Strengthen PPOFlag.Strengthen
1268
pass check_ppo [AQRL];po-loc;[XLr]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[2, 5, 28, 49]
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[R];po;[XLr]
[124, 180, 205, 253, 397, 564, 635, 683, 795, 866, 891, 985, 1083] 49
these ppo strict contain ppo  [AQRL];po-loc;[XLr] contain_list is  [[AMO];po-loc;[R], [AQ];po;[R], [R];po;[XLr]]
PPOFlag.Relaxed PPOFlag.Strengthen
1269
pass check_ppo [AQRL];po-loc;[AMO]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 27, 28, 51, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQRL];po-loc;[AMO] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [AQ];po;[W], [AQ];po;[R], [RL];po;[W], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1270
pass check_ppo [AQRL];po-loc;[RL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 27, 28, 29, 30, 51, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQRL];po-loc;[RL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [AQ];po;[W], [AQ];po;[R], [W];po;[RL], [R];po;[RL], [RL];po;[W], [AMO];po;[AMO]]
PPOFlag.Strengthen PPOFlag.Strengthen
1271
pass check_ppo [AQRL];po-loc;[AQ]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 27, 28, 31, 51, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[RL];po;[AQ]
[740, 1171, 1178] 31
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQRL];po-loc;[AQ] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [AQ];po;[W], [AQ];po;[R], [RL];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
1272
pass check_ppo [AQRL];po-loc;[AQRL]
[R];po-loc;[AMO];rfi;[R]
[R];po-loc;[AQ];po;[W]
[R];po-loc;[AQ];po;[R]
[R];po-loc;[RL];po;[AQ]
[R];po-loc;[RL];po;[W]
[R];po-loc;[AMO];po;[AMO]
[W];po-loc;[AMO];rfi;[R]
[W];po-loc;[AQ];po;[W]
[W];po-loc;[AQ];po;[R]
[W];po-loc;[RL];po;[AQ]
[W];po-loc;[RL];po;[W]
[W];po-loc;[AMO];po;[AMO]
[R];fencerel(Fence.r.w);[AMO];rfi;[R]
[R];fencerel(Fence.r.w);[AQ];po;[W]
[R];fencerel(Fence.r.w);[AQ];po;[R]
[R];fencerel(Fence.r.w);[RL];po;[AQ]
[R];fencerel(Fence.r.w);[RL];po;[W]
[R];fencerel(Fence.r.w);[AMO];po;[AMO]
[R];fencerel(Fence.r.rw);[AMO];rfi;[R]
[R];fencerel(Fence.r.rw);[AQ];po;[W]
[R];fencerel(Fence.r.rw);[AQ];po;[R]
[R];fencerel(Fence.r.rw);[RL];po;[AQ]
[R];fencerel(Fence.r.rw);[RL];po;[W]
[R];fencerel(Fence.r.rw);[AMO];po;[AMO]
[W];fencerel(Fence.w.w);[AMO];rfi;[R]
[W];fencerel(Fence.w.w);[AQ];po;[W]
[W];fencerel(Fence.w.w);[AQ];po;[R]
[W];fencerel(Fence.w.w);[RL];po;[AQ]
[W];fencerel(Fence.w.w);[RL];po;[W]
[W];fencerel(Fence.w.w);[AMO];po;[AMO]
[W];fencerel(Fence.w.rw);[AMO];rfi;[R]
[W];fencerel(Fence.w.rw);[AQ];po;[W]
[W];fencerel(Fence.w.rw);[AQ];po;[R]
[W];fencerel(Fence.w.rw);[RL];po;[AQ]
[W];fencerel(Fence.w.rw);[RL];po;[W]
[W];fencerel(Fence.w.rw);[AMO];po;[AMO]
[R];fencerel(Fence.rw.w);[AMO];rfi;[R]
[R];fencerel(Fence.rw.w);[AQ];po;[W]
[R];fencerel(Fence.rw.w);[AQ];po;[R]
[R];fencerel(Fence.rw.w);[RL];po;[AQ]
[R];fencerel(Fence.rw.w);[RL];po;[W]
[R];fencerel(Fence.rw.w);[AMO];po;[AMO]
[W];fencerel(Fence.rw.w);[AMO];rfi;[R]
[W];fencerel(Fence.rw.w);[AQ];po;[W]
[W];fencerel(Fence.rw.w);[AQ];po;[R]
[W];fencerel(Fence.rw.w);[RL];po;[AQ]
[W];fencerel(Fence.rw.w);[RL];po;[W]
[W];fencerel(Fence.rw.w);[AMO];po;[AMO]
[R];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[AQ];po;[W]
[R];fencerel(Fence.rw.rw);[AQ];po;[R]
[R];fencerel(Fence.rw.rw);[RL];po;[AQ]
[R];fencerel(Fence.rw.rw);[RL];po;[W]
[R];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.rw.rw);[AMO];rfi;[R]
[W];fencerel(Fence.rw.rw);[AQ];po;[W]
[W];fencerel(Fence.rw.rw);[AQ];po;[R]
[W];fencerel(Fence.rw.rw);[RL];po;[AQ]
[W];fencerel(Fence.rw.rw);[RL];po;[W]
[W];fencerel(Fence.rw.rw);[AMO];po;[AMO]
[W];fencerel(Fence.tso);[AMO];rfi;[R]
[W];fencerel(Fence.tso);[AQ];po;[W]
[W];fencerel(Fence.tso);[AQ];po;[R]
[W];fencerel(Fence.tso);[RL];po;[AQ]
[W];fencerel(Fence.tso);[RL];po;[W]
[W];fencerel(Fence.tso);[AMO];po;[AMO]
[R];fencerel(Fence.tso);[AMO];rfi;[R]
[R];fencerel(Fence.tso);[AQ];po;[W]
[R];fencerel(Fence.tso);[AQ];po;[R]
[R];fencerel(Fence.tso);[RL];po;[AQ]
[R];fencerel(Fence.tso);[RL];po;[W]
[R];fencerel(Fence.tso);[AMO];po;[AMO]
[AQ];po;[AMO];rfi;[R]
[AQ];po;[AQ];po;[W]
[AQ];po;[AQ];po;[R]
[AQ];po;[RL];po;[AQ]
[AQ];po;[RL];po;[W]
[AQ];po;[AMO];po;[AMO]
[R];addr;[AMO];rfi;[R]
[R];addr;[AQ];po;[W]
[R];addr;[AQ];po;[R]
[R];addr;[RL];po;[AQ]
[R];addr;[RL];po;[W]
[R];addr;[AMO];po;[AMO]
[R];data;[AMO];rfi;[R]
[R];data;[AQ];po;[W]
[R];data;[AQ];po;[R]
[R];data;[RL];po;[AQ]
[R];data;[RL];po;[W]
[R];data;[AMO];po;[AMO]
[R];ctrl;[AMO];rfi;[R]
[R];ctrl;[AQ];po;[W]
[R];ctrl;[AQ];po;[R]
[R];ctrl;[RL];po;[AQ]
[R];ctrl;[RL];po;[W]
[R];ctrl;[AMO];po;[AMO]
[R];addr;[W];po;[AMO];rfi;[R]
[R];addr;[W];po;[AQ];po;[W]
[R];addr;[W];po;[AQ];po;[R]
[R];addr;[W];po;[RL];po;[AQ]
[R];addr;[W];po;[RL];po;[W]
[R];addr;[W];po;[AMO];po;[AMO]
[R];addr;[R];po;[AMO];rfi;[R]
[R];addr;[R];po;[AQ];po;[W]
[R];addr;[R];po;[AQ];po;[R]
[R];addr;[R];po;[RL];po;[AQ]
[R];addr;[R];po;[RL];po;[W]
[R];addr;[R];po;[AMO];po;[AMO]
[W];fencerel(Fence.r.rw);[AMO];rfi;[R]
[W];fencerel(Fence.r.rw);[AQ];po;[W]
[W];fencerel(Fence.r.rw);[AQ];po;[R]
[W];fencerel(Fence.r.rw);[RL];po;[AQ]
[W];fencerel(Fence.r.rw);[RL];po;[W]
[W];fencerel(Fence.r.rw);[AMO];po;[AMO]
[R];fencerel(Fence.w.w);[AMO];rfi;[R]
[R];fencerel(Fence.w.w);[AQ];po;[W]
[R];fencerel(Fence.w.w);[AQ];po;[R]
[R];fencerel(Fence.w.w);[RL];po;[AQ]
[R];fencerel(Fence.w.w);[RL];po;[W]
[R];fencerel(Fence.w.w);[AMO];po;[AMO]
[XLr];po;[AMO];rfi;[R]
[XLr];po;[AQ];po;[W]
[XLr];po;[AQ];po;[R]
[XLr];po;[RL];po;[AQ]
[XLr];po;[RL];po;[W]
[XLr];po;[AMO];po;[AMO]
[RL];po;[AMO];rfi;[R]
[RL];po;[AQ];po;[W]
[RL];po;[AQ];po;[R]
[RL];po;[RL];po;[AQ]
[RL];po;[RL];po;[W]
[RL];po;[AMO];po;[AMO]
[0, 1, 2, 5, 27, 28, 29, 30, 31, 51, 52, 53]
[R];po-loc;[W]
[32, 54, 100, 156] 0
[W];po-loc;[W]
[77, 131, 156] 1
[R];po-loc;[R]
[3, 4, 5, 7, 55, 101, 125, 126, 127, 128, 129, 130, 157, 747] 2
[AMO];po-loc;[R]
[7, 129, 130, 157] 5
[AQ];po;[W]
[636, 639, 640, 643, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 662, 664, 666, 667, 669, 671, 672, 674, 675, 678, 679, 681] 27
[AQ];po;[R]
[637, 638, 641, 642, 644, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 661, 663, 665, 668, 670, 671, 673, 676, 677, 680, 682, 683] 28
[W];po;[RL]
[90, 143, 168, 289, 315, 338, 360, 410, 459, 504, 530, 578, 649, 671, 697, 739, 951, 1021, 1046, 1096, 1121, 1170, 1193, 1214] 29
[R];po;[RL]
[67, 112, 168, 193, 219, 241, 267, 385, 436, 482, 552, 601, 623, 649, 671, 718, 739, 761, 783, 809, 832, 854, 879, 905, 928, 973, 999, 1071, 1149, 1170, 1214] 30
[RL];po;[AQ]
[740, 1171, 1178] 31
[RL];po;[W]
[31, 726, 729, 730, 733, 735, 736, 737, 739, 740, 741, 746, 1159, 1162, 1163, 1166, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179] 51
[W];po;[AQ]
[31, 91, 98, 316, 323, 339, 346, 460, 467, 531, 538, 579, 586, 650, 657, 698, 740, 952, 959, 1171, 1178, 1194, 1215] 52
[AMO];po;[AMO]
[31, 168, 649, 650, 657, 658, 671, 739, 740, 746, 1170, 1171, 1178, 1179, 1214, 1215, 1221] 53
these ppo strict contain ppo  [AQRL];po-loc;[AQRL] contain_list is  [[R];po-loc;[W], [W];po-loc;[W], [AMO];po-loc;[R], [AQ];po;[W], [AQ];po;[R], [W];po;[RL], [R];po;[RL], [RL];po;[AQ]]
PPOFlag.Strengthen PPOFlag.Strengthen
1273
1274
1276
1277
1278
1279
1280
ppo_list
1280 / 31
[R];po;[R]
[R];po;[W]
[R];po;[AMO]
[R];po;[AQ]
[R];ctrl;[R]
[R];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.w.rw);[W]
[R];fencerel(Fence.rw.r);[W]
[R];fencerel(Fence.w.w);[R]
[R];fencerel(Fence.r.r);[W]
[R];fencerel(Fence.r.w);[R]
[R];fencerel(Fence.w.r);[W]
[W];po;[R]
[W];po;[W]
[W];po;[XLr]
[W];po;[AMO]
[W];fencerel(Fence.rw.r);[W]
[W];fencerel(Fence.w.w);[R]
[W];fencerel(Fence.r.r);[W]
[W];fencerel(Fence.r.w);[R]
[W];fencerel(Fence.r.w);[W]
[W];fencerel(Fence.w.r);[W]
[W];rfi;[R]
[W];rfi;[XLr]
[W];po-loc;[R]
[W];po-loc;[XLr]
[XLr];po;[R]
[XLr];ctrl;[R]
[AMO];po;[R]
[AMO];po;[W]
[RL];po;[R]
synth ppo [R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
synth litmus test for ppo: [R];po;[R]
ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.R'>]
new_ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.R'>]
check legal [R, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR Fre Fence.rw.rwdWW Rfe
RISCV /home/synth/slide/src/slide/../output/test_ppo/new_test
"PodRR Fre Fence.rw.rwdWW Rfe"
Generator=diyone7 (version 7.58)
Prefetch=0:x=F,0:y=T,1:y=F,1:x=W
Com=Fr Rf
Orig=PodRR Fre Fence.rw.rwdWW Rfe
{
0:x6=x; 0:x8=y;
1:x6=y; 1:x8=x;
}
 P0          | P1          ;
 lw x5,0(x6) | ori x5,x0,1 ;
 lw x7,0(x8) | sw x5,0(x6) ;
             | fence rw,rw ;
             | ori x7,x0,1 ;
             | sw x7,0(x8) ;
exists (0:x5=1 /\ 0:x7=0)

use herd check start after pass transform PodRR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
now_herd_logs_ppo_remove {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]}
/home/synth/slide/src/slide/../output/test_ppo/new_test
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
['/home/synth/slide/src/slide/../output/test_ppo/new_test']
use herd check result:  True
now find ppo:[R];po;[R], static time:1
now find ppo:[R];po;[R], herd time:1
synth ppo [R];po;[W]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [R];po;[W]
ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.W'>]
new_ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.W'>]
check legal [R, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW Coe Fence.rw.rwdWW Rfe
RISCV /home/synth/slide/src/slide/../output/test_ppo/new_test
"PodRW Coe Fence.rw.rwdWW Rfe"
Generator=diyone7 (version 7.58)
Prefetch=0:x=F,0:y=W,1:y=F,1:x=W
Com=Co Rf
Orig=PodRW Coe Fence.rw.rwdWW Rfe
{
0:x6=x; 0:x8=y;
1:x6=y; 1:x8=x;
}
 P0          | P1          ;
 lw x5,0(x6) | ori x5,x0,2 ;
 ori x7,x0,1 | sw x5,0(x6) ;
 sw x7,0(x8) | fence rw,rw ;
 lw x9,0(x8) | ori x7,x0,1 ;
             | sw x7,0(x8) ;
exists (0:x9=2 /\ 0:x5=1)

use herd check start after pass transform PodRW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]}
now_herd_logs_ppo_remove {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]}
/home/synth/slide/src/slide/../output/test_ppo/new_test
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
['/home/synth/slide/src/slide/../output/test_ppo/new_test']
use herd check result:  True
now find ppo:[R];po;[W], static time:1
now find ppo:[R];po;[W], herd time:1
synth ppo [R];po;[AMO]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [R];po;[AMO]
ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.AMO'>]
new_ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.AMO'>]
check legal [R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRR LxSx Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coe, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Rfi PodRR LxSx Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal [W, po, R, po, AMO, coe, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, coe, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRR LxSx Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, coe, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRR LxSx Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceD, W, fre]
check legal [W, po, R, po, AMO, rfe, R, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR PodRR LxSx Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceS, W, fre]
check legal [W, po, R, po, AMO, rfe, R, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR PodRR LxSx Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, fre]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, fre]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, fre]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, fre]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, fre]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, fre]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, fre]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, fre]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, fre]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, fre]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRR LxSx Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PosWR PodRR LxSx Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRR LxSx Coi Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal [R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRR LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
synth ppo [R];po;[AQ]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [R];po;[AQ]
ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.AMO'>]
new_ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.AMO'>]
check legal [R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, addrS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal [R, dataD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, dataD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal [R, dataS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, dataS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, ctrlS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coe, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, fre]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, fre]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, fre]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, fre]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, fre]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, fre]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal [W, po, R, po, AMO, coe, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, coe, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, coe, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceD, W, fre]
check legal [W, po, R, po, AMO, rfe, R, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceS, W, fre]
check legal [W, po, R, po, AMO, rfe, R, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, fre]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, fre]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, fre]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, fre]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, fre]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, fre]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, fre]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, fre]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, fre]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, fre]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, fre]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, fre]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, fre]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, fre]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal [R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Rfi PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, rfi, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, R, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRR PodRRPAq LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, R, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRR PodRRPAq LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, R, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
synth ppo [R];ctrl;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [R];ctrl;[R]
ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.CtrlD'>, <class 'src.slide.synth.memory_relation.R'>]
new_ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.CtrlD'>, <class 'src.slide.synth.memory_relation.R'>]
check legal [R, ctrlD, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldR Fre Fence.rw.rwdWW Rfe
RISCV /home/synth/slide/src/slide/../output/test_ppo/new_test
"DpCtrldR Fre Fence.rw.rwdWW Rfe"
Generator=diyone7 (version 7.58)
Prefetch=0:x=F,0:y=T,1:y=F,1:x=W
Com=Fr Rf
Orig=DpCtrldR Fre Fence.rw.rwdWW Rfe
{
0:x6=x; 0:x8=y;
1:x6=y; 1:x8=x;
}
 P0             | P1          ;
 lw x5,0(x6)    | ori x5,x0,1 ;
 bne x5,x0,LC00 | sw x5,0(x6) ;
 LC00:          | fence rw,rw ;
 lw x7,0(x8)    | ori x7,x0,1 ;
                | sw x7,0(x8) ;
exists (0:x5=1 /\ 0:x7=0)

use herd check start after pass transform DpCtrldR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
now_herd_logs_ppo_remove {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]}
/home/synth/slide/src/slide/../output/test_ppo/new_test
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
['/home/synth/slide/src/slide/../output/test_ppo/new_test']
use herd check result:  True
now find ppo:[R];ctrl;[R], static time:1
now find ppo:[R];ctrl;[R], herd time:1
synth ppo [R];fencerel(Fence.w.rw);[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [R];fencerel(Fence.w.rw);[R]
ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.R'>]
new_ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.R'>]
check legal [R, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.w.rwdRR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.w.rwdRR Fre Fence.rw.rwdWW Rfe
RISCV /home/synth/slide/src/slide/../output/test_ppo/new_test
"Fence.w.rwdRR Fre Fence.rw.rwdWW Rfe"
Generator=diyone7 (version 7.58)
Prefetch=0:x=F,0:y=T,1:y=F,1:x=W
Com=Fr Rf
Orig=Fence.w.rwdRR Fre Fence.rw.rwdWW Rfe
{
0:x6=x; 0:x8=y;
1:x6=y; 1:x8=x;
}
 P0          | P1          ;
 lw x5,0(x6) | ori x5,x0,1 ;
 fence w,rw  | sw x5,0(x6) ;
 lw x7,0(x8) | fence rw,rw ;
             | ori x7,x0,1 ;
             | sw x7,0(x8) ;
exists (0:x5=1 /\ 0:x7=0)

use herd check start after pass transform Fence.w.rwdRR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
now_herd_logs_ppo_remove {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]}
/home/synth/slide/src/slide/../output/test_ppo/new_test
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
['/home/synth/slide/src/slide/../output/test_ppo/new_test']
use herd check result:  True
now find ppo:[R];fencerel(Fence.w.rw);[R], static time:1
now find ppo:[R];fencerel(Fence.w.rw);[R], herd time:1
synth ppo [R];fencerel(Fence.w.rw);[W]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [R];fencerel(Fence.w.rw);[W]
ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.W'>]
new_ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.W'>]
check legal [R, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.w.rwdRW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.w.rwdRW Coe Fence.rw.rwdWW Rfe
RISCV /home/synth/slide/src/slide/../output/test_ppo/new_test
"Fence.w.rwdRW Coe Fence.rw.rwdWW Rfe"
Generator=diyone7 (version 7.58)
Prefetch=0:x=F,0:y=W,1:y=F,1:x=W
Com=Co Rf
Orig=Fence.w.rwdRW Coe Fence.rw.rwdWW Rfe
{
0:x6=x; 0:x8=y;
1:x6=y; 1:x8=x;
}
 P0          | P1          ;
 lw x5,0(x6) | ori x5,x0,2 ;
 fence w,rw  | sw x5,0(x6) ;
 ori x7,x0,1 | fence rw,rw ;
 sw x7,0(x8) | ori x7,x0,1 ;
 lw x9,0(x8) | sw x7,0(x8) ;
exists (0:x9=2 /\ 0:x5=1)

use herd check start after pass transform Fence.w.rwdRW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]}
now_herd_logs_ppo_remove {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]}
/home/synth/slide/src/slide/../output/test_ppo/new_test
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
['/home/synth/slide/src/slide/../output/test_ppo/new_test']
use herd check result:  True
now find ppo:[R];fencerel(Fence.w.rw);[W], static time:1
now find ppo:[R];fencerel(Fence.w.rw);[W], herd time:1
synth ppo [R];fencerel(Fence.rw.r);[W]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [R];fencerel(Fence.rw.r);[W]
ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.W'>]
new_ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.W'>]
check legal [R, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rdRW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rdRW Coe Fence.rw.rwdWW Rfe
RISCV /home/synth/slide/src/slide/../output/test_ppo/new_test
"Fence.rw.rdRW Coe Fence.rw.rwdWW Rfe"
Generator=diyone7 (version 7.58)
Prefetch=0:x=F,0:y=W,1:y=F,1:x=W
Com=Co Rf
Orig=Fence.rw.rdRW Coe Fence.rw.rwdWW Rfe
{
0:x6=x; 0:x8=y;
1:x6=y; 1:x8=x;
}
 P0          | P1          ;
 lw x5,0(x6) | ori x5,x0,2 ;
 fence rw,r  | sw x5,0(x6) ;
 ori x7,x0,1 | fence rw,rw ;
 sw x7,0(x8) | ori x7,x0,1 ;
 lw x9,0(x8) | sw x7,0(x8) ;
exists (0:x9=2 /\ 0:x5=1)

use herd check start after pass transform Fence.rw.rdRW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]}
now_herd_logs_ppo_remove {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]}
/home/synth/slide/src/slide/../output/test_ppo/new_test
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
['/home/synth/slide/src/slide/../output/test_ppo/new_test']
use herd check result:  True
now find ppo:[R];fencerel(Fence.rw.r);[W], static time:1
now find ppo:[R];fencerel(Fence.rw.r);[W], herd time:1
synth ppo [R];fencerel(Fence.w.w);[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [R];fencerel(Fence.w.w);[R]
ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.R'>]
new_ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.R'>]
check legal [R, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.w.wdRR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.w.wdRR Fre Fence.rw.rwdWW Rfe
RISCV /home/synth/slide/src/slide/../output/test_ppo/new_test
"Fence.w.wdRR Fre Fence.rw.rwdWW Rfe"
Generator=diyone7 (version 7.58)
Prefetch=0:x=F,0:y=T,1:y=F,1:x=W
Com=Fr Rf
Orig=Fence.w.wdRR Fre Fence.rw.rwdWW Rfe
{
0:x6=x; 0:x8=y;
1:x6=y; 1:x8=x;
}
 P0          | P1          ;
 lw x5,0(x6) | ori x5,x0,1 ;
 fence w,w   | sw x5,0(x6) ;
 lw x7,0(x8) | fence rw,rw ;
             | ori x7,x0,1 ;
             | sw x7,0(x8) ;
exists (0:x5=1 /\ 0:x7=0)

use herd check start after pass transform Fence.w.wdRR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
now_herd_logs_ppo_remove {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]}
/home/synth/slide/src/slide/../output/test_ppo/new_test
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
['/home/synth/slide/src/slide/../output/test_ppo/new_test']
use herd check result:  True
now find ppo:[R];fencerel(Fence.w.w);[R], static time:1
now find ppo:[R];fencerel(Fence.w.w);[R], herd time:1
synth ppo [R];fencerel(Fence.r.r);[W]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [R];fencerel(Fence.r.r);[W]
ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.W'>]
new_ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.W'>]
check legal [R, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.r.rdRW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.r.rdRW Coe Fence.rw.rwdWW Rfe
RISCV /home/synth/slide/src/slide/../output/test_ppo/new_test
"Fence.r.rdRW Coe Fence.rw.rwdWW Rfe"
Generator=diyone7 (version 7.58)
Prefetch=0:x=F,0:y=W,1:y=F,1:x=W
Com=Co Rf
Orig=Fence.r.rdRW Coe Fence.rw.rwdWW Rfe
{
0:x6=x; 0:x8=y;
1:x6=y; 1:x8=x;
}
 P0          | P1          ;
 lw x5,0(x6) | ori x5,x0,2 ;
 fence r,r   | sw x5,0(x6) ;
 ori x7,x0,1 | fence rw,rw ;
 sw x7,0(x8) | ori x7,x0,1 ;
 lw x9,0(x8) | sw x7,0(x8) ;
exists (0:x9=2 /\ 0:x5=1)

use herd check start after pass transform Fence.r.rdRW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]}
now_herd_logs_ppo_remove {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]}
/home/synth/slide/src/slide/../output/test_ppo/new_test
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
['/home/synth/slide/src/slide/../output/test_ppo/new_test']
use herd check result:  True
now find ppo:[R];fencerel(Fence.r.r);[W], static time:1
now find ppo:[R];fencerel(Fence.r.r);[W], herd time:1
synth ppo [R];fencerel(Fence.r.w);[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [R];fencerel(Fence.r.w);[R]
ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.R'>]
new_ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.R'>]
check legal [R, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.r.wdRR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.r.wdRR Fre Fence.rw.rwdWW Rfe
RISCV /home/synth/slide/src/slide/../output/test_ppo/new_test
"Fence.r.wdRR Fre Fence.rw.rwdWW Rfe"
Generator=diyone7 (version 7.58)
Prefetch=0:x=F,0:y=T,1:y=F,1:x=W
Com=Fr Rf
Orig=Fence.r.wdRR Fre Fence.rw.rwdWW Rfe
{
0:x6=x; 0:x8=y;
1:x6=y; 1:x8=x;
}
 P0          | P1          ;
 lw x5,0(x6) | ori x5,x0,1 ;
 fence r,w   | sw x5,0(x6) ;
 lw x7,0(x8) | fence rw,rw ;
             | ori x7,x0,1 ;
             | sw x7,0(x8) ;
exists (0:x5=1 /\ 0:x7=0)

use herd check start after pass transform Fence.r.wdRR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
now_herd_logs_ppo_remove {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]}
/home/synth/slide/src/slide/../output/test_ppo/new_test
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
['/home/synth/slide/src/slide/../output/test_ppo/new_test']
use herd check result:  True
now find ppo:[R];fencerel(Fence.r.w);[R], static time:1
now find ppo:[R];fencerel(Fence.r.w);[R], herd time:1
synth ppo [R];fencerel(Fence.w.r);[W]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [R];fencerel(Fence.w.r);[W]
ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.W'>]
new_ppo [<class 'src.slide.synth.memory_relation.R'>, <class 'src.slide.synth.memory_relation.FenceD'>, <class 'src.slide.synth.memory_relation.W'>]
check legal [R, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.w.rdRW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.w.rdRW Coe Fence.rw.rwdWW Rfe
RISCV /home/synth/slide/src/slide/../output/test_ppo/new_test
"Fence.w.rdRW Coe Fence.rw.rwdWW Rfe"
Generator=diyone7 (version 7.58)
Prefetch=0:x=F,0:y=W,1:y=F,1:x=W
Com=Co Rf
Orig=Fence.w.rdRW Coe Fence.rw.rwdWW Rfe
{
0:x6=x; 0:x8=y;
1:x6=y; 1:x8=x;
}
 P0          | P1          ;
 lw x5,0(x6) | ori x5,x0,2 ;
 fence w,r   | sw x5,0(x6) ;
 ori x7,x0,1 | fence rw,rw ;
 sw x7,0(x8) | ori x7,x0,1 ;
 lw x9,0(x8) | sw x7,0(x8) ;
exists (0:x9=2 /\ 0:x5=1)

use herd check start after pass transform Fence.w.rdRW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]}
now_herd_logs_ppo_remove {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]}
/home/synth/slide/src/slide/../output/test_ppo/new_test
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
['/home/synth/slide/src/slide/../output/test_ppo/new_test']
use herd check result:  True
now find ppo:[R];fencerel(Fence.w.r);[W], static time:1
now find ppo:[R];fencerel(Fence.w.r);[W], herd time:1
synth ppo [W];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[W];po;[R]
synth litmus test for ppo: [W];po;[R]
ppo [<class 'src.slide.synth.memory_relation.W'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.R'>]
new_ppo [<class 'src.slide.synth.memory_relation.W'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.R'>]
check legal [W, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR Fre Fence.rw.rwdWW Coe
RISCV /home/synth/slide/src/slide/../output/test_ppo/new_test
"PodWR Fre Fence.rw.rwdWW Coe"
Generator=diyone7 (version 7.58)
Prefetch=0:x=F,0:y=T,1:y=F,1:x=W
Com=Fr Co
Orig=PodWR Fre Fence.rw.rwdWW Coe
{
0:x6=x; 0:x8=y;
1:x6=y; 1:x8=x;
}
 P0          | P1          ;
 ori x5,x0,2 | ori x5,x0,1 ;
 sw x5,0(x6) | sw x5,0(x6) ;
 lw x7,0(x8) | fence rw,rw ;
             | ori x7,x0,1 ;
             | sw x7,0(x8) ;
             | lw x9,0(x8) ;
exists (0:x7=0 /\ 1:x9=2)

use herd check start after pass transform PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]}
now_herd_logs_ppo_remove {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x7=0; 1:x9=1; , 0:x7=0; 1:x9=2; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]}
/home/synth/slide/src/slide/../output/test_ppo/new_test
[0:x7=0; 1:x9=1; , 0:x7=0; 1:x9=2; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
[0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
['/home/synth/slide/src/slide/../output/test_ppo/new_test']
use herd check result:  True
now find ppo:[W];po;[R], static time:1
now find ppo:[W];po;[R], herd time:1
synth ppo [W];po;[W]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [W];po;[W]
ppo [<class 'src.slide.synth.memory_relation.W'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.W'>]
new_ppo [<class 'src.slide.synth.memory_relation.W'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.W'>]
check legal [W, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW Coe Fence.rw.rwdWW Coe
RISCV /home/synth/slide/src/slide/../output/test_ppo/new_test
"PodWW Coe Fence.rw.rwdWW Coe"
Generator=diyone7 (version 7.58)
Prefetch=0:x=F,0:y=W,1:y=F,1:x=W
Com=Co Co
Orig=PodWW Coe Fence.rw.rwdWW Coe
{
0:x6=x; 0:x8=y;
1:x6=y; 1:x8=x;
}
 P0          | P1          ;
 ori x5,x0,2 | ori x5,x0,2 ;
 sw x5,0(x6) | sw x5,0(x6) ;
 ori x7,x0,1 | fence rw,rw ;
 sw x7,0(x8) | ori x7,x0,1 ;
 lw x9,0(x8) | sw x7,0(x8) ;
             | lw x9,0(x8) ;
exists (0:x9=2 /\ 1:x9=2)

use herd check start after pass transform PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]}
now_herd_logs_ppo_remove {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; , 0:x9=2; 1:x9=2; ]}
/home/synth/slide/src/slide/../output/test_ppo/new_test
[0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; , 0:x9=2; 1:x9=2; ]
[0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]
['/home/synth/slide/src/slide/../output/test_ppo/new_test']
use herd check result:  True
now find ppo:[W];po;[W], static time:1
now find ppo:[W];po;[W], herd time:1
synth ppo [W];po;[XLr]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [W];po;[XLr]
ppo [<class 'src.slide.synth.memory_relation.W'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.Lr'>]
new_ppo [<class 'src.slide.synth.memory_relation.W'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.Lr'>]
check legal [W, po, XLr, fre, W, fenceD, W, coe]
check legal pass [W, po, XLr, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR Fre Fence.rw.rwdWW Coe
{0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
         P0          |         P1           ;
<0x00> ori x5, x0, 2 | <0x00> ori x5, x0, 1 ;
<0x04> sw x5, 0(x6)  | <0x04> sw x5, 0(x6)  ;
<0x08> lw x7, 0(x8)  | <0x08> fence rw, rw  ;
                     | <0x0C> ori x7, x0, 1 ;
                     | <0x10> sw x7, 0(x8)  ;
                     | <0x14> lw x9, 0(x8)  ;

QType.Exists (0:x7==0/\1:x9==2)

thread insts
[<0x00> ori x5, x0, 2, <0x04> sw x5, 0(x6), <0x08> lw x7, 0(x8)]
[<0x00> ori x5, x0, 1, <0x04> sw x5, 0(x6), <0x08> fence rw, rw, <0x0C> ori x7, x0, 1, <0x10> sw x7, 0(x8), <0x14> lw x9, 0(x8)]
cycle:  [W];po;[R];fre;[W];fencerel(Fence.rw.rw);[W];coe
thread_list: 
[W, po, R]
[W, fenceD, W]
connect list:
fre
coe
check ppo [W, po, R] is match [<0x00> ori x5, x0, 2, <0x04> sw x5, 0(x6), <0x08> lw x7, 0(x8)]
thread mem list [1, 2]
thread ppo :[W, po, R],num:2
<0x00> ori x5, x0, 2 ori
<0x04> sw x5, 0(x6) sw
<0x08> lw x7, 0(x8) lw
[]
check relation: W, pre_inst: <0x04> sw x5, 0(x6)
relation_flag: True
binary_relation: po, pre_inst: <0x04> sw x5, 0(x6), midden_insts: None, after_inst: <0x08> lw x7, 0(x8)
binary_flag: True
check relation: R, pre_inst: <0x08> lw x7, 0(x8)
relation_flag: True
ppo [W, po, R] match [<0x00> ori x5, x0, 2, <0x04> sw x5, 0(x6), <0x08> lw x7, 0(x8)]
check ppo [W, po, R] is match [<0x00> ori x5, x0, 1, <0x04> sw x5, 0(x6), <0x08> fence rw, rw, <0x0C> ori x7, x0, 1, <0x10> sw x7, 0(x8), <0x14> lw x9, 0(x8)]
thread mem list [1, 4, 5]
thread ppo :[W, po, R],num:2
<0x00> ori x5, x0, 1 ori
<0x04> sw x5, 0(x6) sw
<0x08> fence rw, rw fence
<0x0C> ori x7, x0, 1 ori
<0x10> sw x7, 0(x8) sw
<0x14> lw x9, 0(x8) lw
[]
check relation: W, pre_inst: <0x04> sw x5, 0(x6)
relation_flag: True
binary_relation: po, pre_inst: <0x04> sw x5, 0(x6), midden_insts: [<0x08> fence rw, rw, <0x0C> ori x7, x0, 1], after_inst: <0x10> sw x7, 0(x8)
binary_flag: True
check relation: R, pre_inst: <0x10> sw x7, 0(x8)
relation_flag: False
check ppo [W, fenceD, W] is match [<0x00> ori x5, x0, 2, <0x04> sw x5, 0(x6), <0x08> lw x7, 0(x8)]
thread mem list [1, 2]
thread ppo :[W, fenceD, W],num:2
<0x00> ori x5, x0, 2 ori
<0x04> sw x5, 0(x6) sw
<0x08> lw x7, 0(x8) lw
[]
check relation: W, pre_inst: <0x04> sw x5, 0(x6)
relation_flag: True
binary_relation: fenceD, pre_inst: <0x04> sw x5, 0(x6), midden_insts: None, after_inst: <0x08> lw x7, 0(x8)
binary_flag: False
check ppo [W, fenceD, W] is match [<0x00> ori x5, x0, 1, <0x04> sw x5, 0(x6), <0x08> fence rw, rw, <0x0C> ori x7, x0, 1, <0x10> sw x7, 0(x8), <0x14> lw x9, 0(x8)]
thread mem list [1, 4, 5]
thread ppo :[W, fenceD, W],num:2
<0x00> ori x5, x0, 1 ori
<0x04> sw x5, 0(x6) sw
<0x08> fence rw, rw fence
<0x0C> ori x7, x0, 1 ori
<0x10> sw x7, 0(x8) sw
<0x14> lw x9, 0(x8) lw
[]
check relation: W, pre_inst: <0x04> sw x5, 0(x6)
relation_flag: True
binary_relation: fenceD, pre_inst: <0x04> sw x5, 0(x6), midden_insts: [<0x08> fence rw, rw, <0x0C> ori x7, x0, 1], after_inst: <0x10> sw x7, 0(x8)
binary_flag: True
check relation: W, pre_inst: <0x10> sw x7, 0(x8)
relation_flag: True
ppo [W, fenceD, W] match [<0x00> ori x5, x0, 1, <0x04> sw x5, 0(x6), <0x08> fence rw, rw, <0x0C> ori x7, x0, 1, <0x10> sw x7, 0(x8), <0x14> lw x9, 0(x8)]
thread_pair_list {0: [0], 1: [1]}
init_conds {(0, x6): 'x', (0, x8): 'y', (1, x6): 'y', (1, x8): 'x'}
ppo 1 match thread list[1]
2
<0x08> lw x7, 0(x8) <0x04> sw x5, 0(x6) fre
same address_flag: True
(0, [0, 1])
ppo 0 match thread list[0]
2
<0x10> sw x7, 0(x8) <0x04> sw x5, 0(x6) coe
same address_flag: True
match [0, 1]
match success: [0, 1]
thread ppo [W, po, XLr]
inject_list [0,2,lr.w x7, 0(x8)]
thread ppo [W, fenceD, W]
inject_list []
2 <0x08> lw x7, 0(x8)
RISCV /home/synth/slide/src/slide/../output/test_ppo/new_test
 {0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x; }
      P0       |      P1       ;
ori x5, x0, 2  | ori x5, x0, 1 ;
sw x5, 0(x6)   | sw x5, 0(x6)  ;
lr.w x7, 0(x8) | fence rw, rw  ;
               | ori x7, x0, 1 ;
               | sw x7, 0(x8)  ;
               | lw x9, 0(x8)  ;

exists (0:x7=0/\1:x9=2)

use herd check start after pass transform PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]}
now_herd_logs_ppo_remove {'/home/synth/slide/src/slide/../output/test_ppo/new_test': [0:x7=0; 1:x9=1; , 0:x7=0; 1:x9=2; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]}
/home/synth/slide/src/slide/../output/test_ppo/new_test
[0:x7=0; 1:x9=1; , 0:x7=0; 1:x9=2; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
[0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
['/home/synth/slide/src/slide/../output/test_ppo/new_test']
use herd check result:  True
now find ppo:[W];po;[XLr], static time:1
now find ppo:[W];po;[XLr], herd time:1
synth ppo [W];po;[AMO]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
synth litmus test for ppo: [W];po;[AMO]
ppo [<class 'src.slide.synth.memory_relation.W'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.AMO'>]
new_ppo [<class 'src.slide.synth.memory_relation.W'>, <class 'src.slide.synth.memory_relation.Po'>, <class 'src.slide.synth.memory_relation.AMO'>]
check legal [W, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po, AMO, coe, W, fenceS, W, coe]
check legal [W, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po, AMO, coe, W, fenceD, W, fre]
check legal [W, po, AMO, coe, W, fenceD, R, fre]
check legal pass [W, po, AMO, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR LxSx Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, coe, W, fenceS, W, fre]
check legal [W, po, AMO, coe, W, fenceS, R, fre]
check legal pass [W, po, AMO, coe, W, fenceS, R, fre]
check legal [W, po, AMO, rfe, R, fenceD, W, fre]
check legal [W, po, AMO, rfe, R, fenceD, R, fre]
check legal pass [W, po, AMO, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR LxSx Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, rfe, R, fenceS, W, fre]
check legal [W, po, AMO, rfe, R, fenceS, R, fre]
check legal pass [W, po, AMO, rfe, R, fenceS, R, fre]
check legal [W, po, AMO, coi, W, coe, W, fenceD, W, fre]
check legal [W, po, AMO, coi, W, coe, W, fenceD, R, fre]
check legal pass [W, po, AMO, coi, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx Coi Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Coi Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR LxSx Coi Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, coi, W, coe, W, fenceS, W, fre]
check legal [W, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal pass [W, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal [W, po, AMO, fenceD, W, coe, W, fenceD, W, fre]
check legal [W, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
check legal pass [W, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceD, W, coe, W, fenceS, W, fre]
check legal [W, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
check legal pass [W, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceS, W, coe, W, fenceD, W, fre]
check legal [W, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
check legal pass [W, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceS, W, coe, W, fenceS, W, fre]
check legal [W, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal pass [W, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal [W, po, AMO, po, W, coe, W, fenceD, W, fre]
check legal [W, po, AMO, po, W, coe, W, fenceD, R, fre]
check legal pass [W, po, AMO, po, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx PodWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PodWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR LxSx PodWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po, W, coe, W, fenceS, W, fre]
check legal [W, po, AMO, po, W, coe, W, fenceS, R, fre]
check legal pass [W, po, AMO, po, W, coe, W, fenceS, R, fre]
use herd check start before pass transform PodWR LxSx PodWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PodWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR LxSx PodWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po-loc, W, coe, W, fenceD, W, fre]
check legal [W, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
check legal pass [W, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx PosWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PosWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR LxSx PosWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po-loc, W, coe, W, fenceS, W, fre]
check legal [W, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal pass [W, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal [W, po, AMO, coi, W, rfe, R, fenceD, W, fre]
check legal [W, po, AMO, coi, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, AMO, coi, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx Coi Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Coi Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR LxSx Coi Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, coi, W, rfe, R, fenceS, W, fre]
check legal [W, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal [W, po, AMO, fenceD, W, rfe, R, fenceD, W, fre]
check legal [W, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceD, W, rfe, R, fenceS, W, fre]
check legal [W, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceS, W, rfe, R, fenceD, W, fre]
check legal [W, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceS, W, rfe, R, fenceS, W, fre]
check legal [W, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal [W, po, AMO, po, W, rfe, R, fenceD, W, fre]
check legal [W, po, AMO, po, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, AMO, po, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx PodWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PodWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR LxSx PodWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po, W, rfe, R, fenceS, W, fre]
check legal [W, po, AMO, po, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, AMO, po, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform PodWR LxSx PodWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PodWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform PodWR LxSx PodWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po-loc, W, rfe, R, fenceD, W, fre]
check legal [W, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
check legal pass [W, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx PosWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PosWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform PodWR LxSx PosWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po-loc, W, rfe, R, fenceS, W, fre]
check legal [W, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal pass [W, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal [W, po, AMO, rfi, R, fre, W, fenceD, W, fre]
check legal [W, po, AMO, rfi, R, fre, W, fenceD, R, fre]
check legal pass [W, po, AMO, rfi, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx Rfi Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Rfi Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR LxSx Rfi Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, rfi, R, fre, W, fenceS, W, fre]
check legal [W, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal pass [W, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal [W, po, AMO, fenceD, R, fre, W, fenceD, W, fre]
check legal [W, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
check legal pass [W, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceD, R, fre, W, fenceS, W, fre]
check legal [W, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
check legal pass [W, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceS, R, fre, W, fenceD, W, fre]
check legal [W, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
check legal pass [W, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, fenceS, R, fre, W, fenceS, W, fre]
check legal [W, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal pass [W, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal [W, po, AMO, po, R, fre, W, fenceD, W, fre]
check legal [W, po, AMO, po, R, fre, W, fenceD, R, fre]
check legal pass [W, po, AMO, po, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx PodWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PodWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR LxSx PodWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po, R, fre, W, fenceS, W, fre]
check legal [W, po, AMO, po, R, fre, W, fenceS, R, fre]
check legal pass [W, po, AMO, po, R, fre, W, fenceS, R, fre]
use herd check start before pass transform PodWR LxSx PodWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PodWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform PodWR LxSx PodWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po-loc, R, fre, W, fenceD, W, fre]
check legal [W, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
check legal pass [W, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
use herd check start before pass transform PodWR LxSx PosWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWR LxSx PosWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform PodWR LxSx PosWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, AMO, po-loc, R, fre, W, fenceS, W, fre]
check legal [W, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal pass [W, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal [W, coi, W, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Coi PodWR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, coe, W, fenceD, R, coe]
check legal [W, coi, W, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, coe, W, fenceS, W, coe]
check legal [W, coi, W, po, AMO, coe, W, fenceS, R, coe]
check legal [W, coi, W, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Coi PodWR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, coi, W, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, coi, W, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, coi, W, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Coi PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, coi, W, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, coi, W, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, coi, W, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, coi, W, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, coi, W, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, coi, W, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, coi, W, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, coi, W, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Coi PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, coi, W, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Coi PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Coi PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, coi, W, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Coi PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, coi, W, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, coi, W, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, coi, W, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Coi PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, coi, W, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, coi, W, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, coi, W, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, coi, W, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, coi, W, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, coi, W, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, coi, W, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, coi, W, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Coi PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, coi, W, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Coi PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Coi PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, coi, W, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Coi PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, coi, W, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, coi, W, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, coi, W, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Coi PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, coi, W, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, coi, W, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, coi, W, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, coi, W, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, coi, W, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, coi, W, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, coi, W, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, coi, W, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Coi PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, coi, W, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Coi PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Coi PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, coi, W, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, coi, W, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Coi PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Coi PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, coi, W, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, coi, W, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, coi, W, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceD, W, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceD, W, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceD, W, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceD, W, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, coe, W, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, coe, W, fenceS, W, coe]
check legal [W, fenceS, W, po, AMO, coe, W, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, fenceS, W, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, W, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, W, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, fenceS, W, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, W, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, W, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, fenceS, W, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, W, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, W, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, fenceS, W, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, fenceS, W, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform Fence.rw.rwsWW PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsWW PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform Fence.rw.rwsWW PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceS, W, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, fenceS, W, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, fenceS, W, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, fenceS, W, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po, W, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWW PodWR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po, W, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWW PodWR LxSx Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po, W, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWW PodWR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po, W, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWW PodWR LxSx Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po, W, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWW PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po, W, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, coi, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Coi Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Coi Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWW PodWR LxSx Coi Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po, W, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po, W, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po, W, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po, W, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po, W, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWW PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po, W, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWW PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po, W, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PodWW PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po, W, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx PosWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx PosWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PodWW PodWR LxSx PosWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po, W, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWW PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po, W, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, coi, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Coi Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Coi Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWW PodWR LxSx Coi Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po, W, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po, W, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po, W, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po, W, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po, W, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po, W, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po, W, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PodWW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po, W, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PodWW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po, W, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWW PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po, W, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, rfi, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Rfi Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Rfi Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWW PodWR LxSx Rfi Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po, W, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po, W, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po, W, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po, W, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po, W, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWW PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po, W, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWW PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po, W, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po, W, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PodWW PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PodWW PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po, W, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po, W, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PodWW PodWR LxSx PosWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodWW PodWR LxSx PosWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PodWW PodWR LxSx PosWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po, W, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWW PodWR LxSx Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, coe, W, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, coe, W, fenceS, W, coe]
check legal [W, po-loc, W, po, AMO, coe, W, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWW PodWR LxSx Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, rfe, R, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, rfe, R, fenceS, W, coe]
check legal [W, po-loc, W, po, AMO, rfe, R, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, coi, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, coi, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWW PodWR LxSx Coi Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, coi, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, coi, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, W, po, AMO, coi, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, fenceD, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, fenceD, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, fenceD, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, fenceD, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, fenceS, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, fenceS, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, fenceS, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, W, po, AMO, fenceS, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, po, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, po, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWW PodWR LxSx PodWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, po, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, po, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, po, W, coe, W, fenceS, W, coe]
use herd check start before pass transform PosWW PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
use herd check start after pass transform PosWW PodWR LxSx PodWW Coe Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, po, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, po-loc, W, coe, W, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
use herd check start after pass transform PosWW PodWR LxSx PosWW Coe Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, po-loc, W, coe, W, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, po-loc, W, coe, W, fenceS, W, coe]
check legal [W, po-loc, W, po, AMO, po-loc, W, coe, W, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, coi, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, coi, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWW PodWR LxSx Coi Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, coi, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, coi, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, W, po, AMO, coi, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, fenceD, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, fenceD, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, fenceD, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, fenceD, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, fenceS, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, fenceS, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, fenceS, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, W, po, AMO, fenceS, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, po, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, po, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, po, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, po, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, po, W, rfe, R, fenceS, W, coe]
use herd check start before pass transform PosWW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
use herd check start after pass transform PosWW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, po, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, po-loc, W, rfe, R, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
use herd check start after pass transform PosWW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, po-loc, W, rfe, R, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, po-loc, W, rfe, R, fenceS, W, coe]
check legal [W, po-loc, W, po, AMO, po-loc, W, rfe, R, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, rfi, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, rfi, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWW PodWR LxSx Rfi Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, rfi, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, rfi, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, W, po, AMO, rfi, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, fenceD, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, fenceD, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, fenceD, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, fenceD, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, fenceS, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, fenceS, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, fenceS, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, W, po, AMO, fenceS, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, po, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, po, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWW PodWR LxSx PodWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, po, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, po, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, po, R, fre, W, fenceS, W, coe]
use herd check start before pass transform PosWW PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
use herd check start after pass transform PosWW PodWR LxSx PodWR Fre Fence.rw.rwsWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, po, R, fre, W, fenceS, R, coe]
check legal [W, po-loc, W, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
check legal pass [W, po-loc, W, po, AMO, po-loc, R, fre, W, fenceD, W, coe]
use herd check start before pass transform PosWW PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosWW PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
use herd check start after pass transform PosWW PodWR LxSx PosWR Fre Fence.rw.rwdWW Coe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, po-loc, W, po, AMO, po-loc, R, fre, W, fenceD, R, coe]
check legal [W, po-loc, W, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal pass [W, po-loc, W, po, AMO, po-loc, R, fre, W, fenceS, W, coe]
check legal [W, po-loc, W, po, AMO, po-loc, R, fre, W, fenceS, R, coe]
check legal [R, fri, W, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fri PodWR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, fri, W, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fri PodWR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, fri, W, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fri PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, fri, W, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fri PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fri PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fri PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, fri, W, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fri PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fri PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fri PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fri PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, fri, W, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fri PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, fri, W, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fri PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fri PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fri PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, fri, W, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fri PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fri PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fri PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fri PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, fri, W, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fri PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, fri, W, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fri PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fri PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fri PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, fri, W, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fri PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fri PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fri PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fri, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fri, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fri PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fri PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fri PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fri, W, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fri, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fri, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, fri, W, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceD, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceD, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceD, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceD, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwdRW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdRW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwdRW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceD, W, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, fenceS, W, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, W, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, W, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, W, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, fenceS, W, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, W, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, W, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, fenceS, W, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, W, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, W, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, fenceS, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, fenceS, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform Fence.rw.rwsRW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwsRW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform Fence.rw.rwsRW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, fenceS, W, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, fenceS, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, fenceS, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, fenceS, W, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po, W, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po, W, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po, W, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PodRW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PodRW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PodRW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PodRW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PodRW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PodRW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po, W, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRW PodWR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, po-loc, W, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, W, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, W, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, W, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, po-loc, W, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, W, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PosRW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, W, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform PosRW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform PosRW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, po-loc, W, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, po-loc, W, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, po-loc, W, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform PosRW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, po-loc, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, po-loc, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform PosRW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test PosRW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform PosRW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, po-loc, W, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, po-loc, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, po-loc, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, po-loc, W, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, addrS, W, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, addrS, W, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, addrS, W, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, addrS, W, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, addrS, W, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, addrS, W, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, addrS, W, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, addrS, W, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, addrS, W, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, addrS, W, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, addrS, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrS, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrsW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrsW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrsW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrS, W, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, addrS, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrS, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, addrS, W, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, addrD, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, addrD, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, addrD, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, addrD, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpAddrdW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpAddrdW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpAddrdW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, addrD, W, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, dataD, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, dataD, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, dataD, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, dataD, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpDatadW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatadW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatadW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataD, W, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, dataS, W, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, dataS, W, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, dataS, W, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, dataS, W, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, dataS, W, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, dataS, W, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, dataS, W, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, dataS, W, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, dataS, W, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, dataS, W, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, dataS, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, dataS, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpDatasW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpDatasW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpDatasW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, dataS, W, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, dataS, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, dataS, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, dataS, W, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Coi Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx PosWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Coi Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx PosWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Rfi Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlD, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlD, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlD, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrldW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrldW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrldW PodWR LxSx PosWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlD, W, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, coe, W, fenceS, W, rfe]
check legal [R, ctrlS, W, po, AMO, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, rfe, R, fenceS, W, rfe]
check legal [R, ctrlS, W, po, AMO, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, coi, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Coi Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, coi, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, coi, W, coe, W, fenceS, W, rfe]
check legal [R, ctrlS, W, po, AMO, coi, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, fenceD, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, fenceD, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, fenceD, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, fenceD, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, fenceS, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, fenceS, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, fenceS, W, coe, W, fenceS, W, rfe]
check legal [R, ctrlS, W, po, AMO, fenceS, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, po, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx PodWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, po, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, po, W, coe, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx PodWW Coe Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, po, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, po-loc, W, coe, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx PosWW Coe Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, po-loc, W, coe, W, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, po-loc, W, coe, W, fenceS, W, rfe]
check legal [R, ctrlS, W, po, AMO, po-loc, W, coe, W, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, coi, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Coi Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, coi, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, coi, W, rfe, R, fenceS, W, rfe]
check legal [R, ctrlS, W, po, AMO, coi, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, fenceD, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, fenceD, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, fenceD, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, fenceD, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, fenceS, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, fenceS, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, fenceS, W, rfe, R, fenceS, W, rfe]
check legal [R, ctrlS, W, po, AMO, fenceS, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, po, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx PodWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, po, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, po, W, rfe, R, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx PodWW Rfe Fence.rw.rwsRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, po, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, po-loc, W, rfe, R, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx PosWW Rfe Fence.rw.rwdRW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, po-loc, W, rfe, R, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, po-loc, W, rfe, R, fenceS, W, rfe]
check legal [R, ctrlS, W, po, AMO, po-loc, W, rfe, R, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, rfi, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Rfi Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, rfi, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, rfi, R, fre, W, fenceS, W, rfe]
check legal [R, ctrlS, W, po, AMO, rfi, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, fenceD, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, fenceD, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, fenceD, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, fenceD, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, fenceS, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, fenceS, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, fenceS, R, fre, W, fenceS, W, rfe]
check legal [R, ctrlS, W, po, AMO, fenceS, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, po, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx PodWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, po, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, po, R, fre, W, fenceS, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx PodWR Fre Fence.rw.rwsWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, po, R, fre, W, fenceS, R, rfe]
check legal [R, ctrlS, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, po-loc, R, fre, W, fenceD, W, rfe]
use herd check start before pass transform DpCtrlsW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test DpCtrlsW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
use herd check start after pass transform DpCtrlsW PodWR LxSx PosWR Fre Fence.rw.rwdWW Rfe
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [R, ctrlS, W, po, AMO, po-loc, R, fre, W, fenceD, R, rfe]
check legal [R, ctrlS, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal pass [R, ctrlS, W, po, AMO, po-loc, R, fre, W, fenceS, W, rfe]
check legal [R, ctrlS, W, po, AMO, po-loc, R, fre, W, fenceS, R, rfe]
check legal [W, coi, W, po, AMO, coe, W, fenceD, W, fre]
check legal [W, coi, W, po, AMO, coe, W, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, coe, W, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Coi PodWR LxSx Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, coe, W, fenceS, W, fre]
check legal [W, coi, W, po, AMO, coe, W, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, coe, W, fenceS, R, fre]
check legal [W, coi, W, po, AMO, rfe, R, fenceD, W, fre]
check legal [W, coi, W, po, AMO, rfe, R, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, rfe, R, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Coi PodWR LxSx Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, rfe, R, fenceS, W, fre]
check legal [W, coi, W, po, AMO, rfe, R, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, rfe, R, fenceS, R, fre]
check legal [W, coi, W, po, AMO, coi, W, coe, W, fenceD, W, fre]
check legal [W, coi, W, po, AMO, coi, W, coe, W, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, coi, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx Coi Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Coi Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Coi PodWR LxSx Coi Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, coi, W, coe, W, fenceS, W, fre]
check legal [W, coi, W, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, coi, W, coe, W, fenceS, R, fre]
check legal [W, coi, W, po, AMO, fenceD, W, coe, W, fenceD, W, fre]
check legal [W, coi, W, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, fenceD, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceD, W, coe, W, fenceS, W, fre]
check legal [W, coi, W, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, fenceD, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwdWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceS, W, coe, W, fenceD, W, fre]
check legal [W, coi, W, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, fenceS, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwsWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceS, W, coe, W, fenceS, W, fre]
check legal [W, coi, W, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, fenceS, W, coe, W, fenceS, R, fre]
check legal [W, coi, W, po, AMO, po, W, coe, W, fenceD, W, fre]
check legal [W, coi, W, po, AMO, po, W, coe, W, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, po, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx PodWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PodWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Coi PodWR LxSx PodWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po, W, coe, W, fenceS, W, fre]
check legal [W, coi, W, po, AMO, po, W, coe, W, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, po, W, coe, W, fenceS, R, fre]
use herd check start before pass transform Coi PodWR LxSx PodWW Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PodWW Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Coi PodWR LxSx PodWW Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po-loc, W, coe, W, fenceD, W, fre]
check legal [W, coi, W, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, po-loc, W, coe, W, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx PosWW Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PosWW Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Coi PodWR LxSx PosWW Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po-loc, W, coe, W, fenceS, W, fre]
check legal [W, coi, W, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, po-loc, W, coe, W, fenceS, R, fre]
check legal [W, coi, W, po, AMO, coi, W, rfe, R, fenceD, W, fre]
check legal [W, coi, W, po, AMO, coi, W, rfe, R, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, coi, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx Coi Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Coi Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Coi PodWR LxSx Coi Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, coi, W, rfe, R, fenceS, W, fre]
check legal [W, coi, W, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, coi, W, rfe, R, fenceS, R, fre]
check legal [W, coi, W, po, AMO, fenceD, W, rfe, R, fenceD, W, fre]
check legal [W, coi, W, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, fenceD, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceD, W, rfe, R, fenceS, W, fre]
check legal [W, coi, W, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, fenceD, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwdWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceS, W, rfe, R, fenceD, W, fre]
check legal [W, coi, W, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, fenceS, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwsWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceS, W, rfe, R, fenceS, W, fre]
check legal [W, coi, W, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, fenceS, W, rfe, R, fenceS, R, fre]
check legal [W, coi, W, po, AMO, po, W, rfe, R, fenceD, W, fre]
check legal [W, coi, W, po, AMO, po, W, rfe, R, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, po, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx PodWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PodWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Coi PodWR LxSx PodWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po, W, rfe, R, fenceS, W, fre]
check legal [W, coi, W, po, AMO, po, W, rfe, R, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, po, W, rfe, R, fenceS, R, fre]
use herd check start before pass transform Coi PodWR LxSx PodWW Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PodWW Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Coi PodWR LxSx PodWW Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po-loc, W, rfe, R, fenceD, W, fre]
check legal [W, coi, W, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, po-loc, W, rfe, R, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx PosWW Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PosWW Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Coi PodWR LxSx PosWW Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po-loc, W, rfe, R, fenceS, W, fre]
check legal [W, coi, W, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, po-loc, W, rfe, R, fenceS, R, fre]
check legal [W, coi, W, po, AMO, rfi, R, fre, W, fenceD, W, fre]
check legal [W, coi, W, po, AMO, rfi, R, fre, W, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, rfi, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx Rfi Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Rfi Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Coi PodWR LxSx Rfi Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, rfi, R, fre, W, fenceS, W, fre]
check legal [W, coi, W, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, rfi, R, fre, W, fenceS, R, fre]
check legal [W, coi, W, po, AMO, fenceD, R, fre, W, fenceD, W, fre]
check legal [W, coi, W, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, fenceD, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceD, R, fre, W, fenceS, W, fre]
check legal [W, coi, W, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, fenceD, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwdWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceS, R, fre, W, fenceD, W, fre]
check legal [W, coi, W, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, fenceS, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Coi PodWR LxSx Fence.rw.rwsWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, fenceS, R, fre, W, fenceS, W, fre]
check legal [W, coi, W, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, fenceS, R, fre, W, fenceS, R, fre]
check legal [W, coi, W, po, AMO, po, R, fre, W, fenceD, W, fre]
check legal [W, coi, W, po, AMO, po, R, fre, W, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, po, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx PodWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PodWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Coi PodWR LxSx PodWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po, R, fre, W, fenceS, W, fre]
check legal [W, coi, W, po, AMO, po, R, fre, W, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, po, R, fre, W, fenceS, R, fre]
use herd check start before pass transform Coi PodWR LxSx PodWR Fre Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PodWR Fre Fence.rw.rwsWR Fre
use herd check start after pass transform Coi PodWR LxSx PodWR Fre Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po-loc, R, fre, W, fenceD, W, fre]
check legal [W, coi, W, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
check legal pass [W, coi, W, po, AMO, po-loc, R, fre, W, fenceD, R, fre]
use herd check start before pass transform Coi PodWR LxSx PosWR Fre Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Coi PodWR LxSx PosWR Fre Fence.rw.rwdWR Fre
use herd check start after pass transform Coi PodWR LxSx PosWR Fre Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, coi, W, po, AMO, po-loc, R, fre, W, fenceS, W, fre]
check legal [W, coi, W, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal pass [W, coi, W, po, AMO, po-loc, R, fre, W, fenceS, R, fre]
check legal [W, fenceD, W, po, AMO, coe, W, fenceD, W, fre]
check legal [W, fenceD, W, po, AMO, coe, W, fenceD, R, fre]
check legal pass [W, fenceD, W, po, AMO, coe, W, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Coe Fence.rw.rwdWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Coe Fence.rw.rwdWR Fre
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Coe Fence.rw.rwdWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, coe, W, fenceS, W, fre]
check legal [W, fenceD, W, po, AMO, coe, W, fenceS, R, fre]
check legal pass [W, fenceD, W, po, AMO, coe, W, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Coe Fence.rw.rwsWR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Coe Fence.rw.rwsWR Fre
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Coe Fence.rw.rwsWR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, rfe, R, fenceD, W, fre]
check legal [W, fenceD, W, po, AMO, rfe, R, fenceD, R, fre]
check legal pass [W, fenceD, W, po, AMO, rfe, R, fenceD, R, fre]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Rfe Fence.rw.rwdRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Rfe Fence.rw.rwdRR Fre
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Rfe Fence.rw.rwdRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, rfe, R, fenceS, W, fre]
check legal [W, fenceD, W, po, AMO, rfe, R, fenceS, R, fre]
check legal pass [W, fenceD, W, po, AMO, rfe, R, fenceS, R, fre]
use herd check start before pass transform Fence.rw.rwdWW PodWR LxSx Rfe Fence.rw.rwsRR Fre
diyone7 cmd: eval $(opam env);diyone7 -arch RISC-V -obs local -name /home/synth/slide/src/slide/../output/test_ppo/new_test Fence.rw.rwdWW PodWR LxSx Rfe Fence.rw.rwsRR Fre
use herd check start after pass transform Fence.rw.rwdWW PodWR LxSx Rfe Fence.rw.rwsRR Fre
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-0.cat
/home/synth/slide/src/slide/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {}
now_herd_logs_ppo_remove {}
[]
use herd check result:  False
check legal [W, fenceD, W, po, AMO, coi, W, coe, W, fenceD, W, fre]
check legal [W, fenceD, W, po, AMO, coi, W, coe, W, fenceD, R, fre]
check legal pass